k = (t, SPD) => // fx generator
   (d = x =>
   max(
   min(
   
     max(
    min(
   sin(.99995 ** (t * (2 ** x) & 16383) * 512),
      1),
      -.7) / 2 +

   max(
      min(
      sin(.99992  ** (t * (2 ** x) & 16383) * 492),
      .9),
     -.7) / 2.3 +

   max(
      min(
      sin(.99991 ** (t * (2 ** x) & 16383) * 440),
      .5),
      0) / 2,
    
    1),
    -.7),

d(
  SPD
)),

n = x => // noise generator

(sin(
   t >> 3) * t / 64 & 1) / (5 + (t * 2 ** x % 65536) / 64) +

(cos(
   t >> 3) * t / 48 & 1) / (3 + (t * 2 ** x % 65536) / 96) +

(sin(
   t >> 2) * t / 84 & 15) / (5 + (t * 2 ** x % 65536) / 128) / 8 +

(tan(
   t / 5 | t / 9) * t / 16 & 3) / (4 + (t * 2 ** x % 65536) / 108) +

(tan(
   t / 4 ^ t / 7) * t / 16 & 3) / (6 + (t * 2 ** x % 65536) / 49),

bw = { // guitar waveshaper with frequency
  d: .7,
  a: .0554,
  s: .132,
  fr: [12, 8, 7, 5][3 & t >> 16] / 12
},


((([
   k(sin(t)*10+t, 0) + 
   k(sin(t/2)*7.5+sin(t)*7.5+t, 0) + 
   k(sin(t/4)*5.5+sin(t/2)*5.5+sin(t)*5+t, 0), // fx1

   k(sin(t)*32+t, 0) + 
   k(sin(t/2)*15+sin(t)*5+t, 0) + 
   k(sin(t/4)*9+sin(t/2)*5.5+sin(t*1.1)*9+t, 0), // fx2

   k(sin(t)*24+t, 0) + 
   k(sin(t/8)*8+sin(t/3)*18+t, 0) + 
   k(sin(t/3)*sin(t/2)*5.5+sin(t/2)*5+t, 0), // fx3

   k(sin(t)*16+t, 0) + 
   k(sin(t/2)*23+sin(t/16/(1+(1&t>>12)))*54+t,  0) + 
   k(sin(t/3)*7+sin(t)*6+sin(t*2)*9+t, 0) +
   k(sin(t/9)*21*sin(t/2)+t, 1) // fx4
   ]
   [3 & t >> 14] / 5 +

   ([n(0), n(1), n(0), n(2), n(1), n(2), n(0), n(1)][7&t>>14] +
   [n(0), n(1), n(1), n(0)][3&t>>14] +
   [n(2), n(2), n(3), n(2)][3&t>>15] +
   [n(4), 0,    0,    0   ][3&t>>15] +
   [n(3), 0,    n(3), n(4)][3&t>>14]  * (131072 > t))) * 1.5 + // hihats

   9 * ((k(t%256, 2+bw.d) / (4 + (t & 16383) / 128) +
   k([1.5,1.6,1.8,2][3&t>>16]*t%256,3-bw.d) / (4 + (t & 16383) / 128) +
   k([1,1.33,1.5,1.6][3&t>>16]*t*(1+(3&-t>>11))%256, 2+bw.d) / (4 + (t & 16383) / 128)) * (262144 < t) // first instrument

+

((((cos(sin((t / 32 * 2 ** bw.fr) + (1 + (bw.a*16)) * cos(t/32 * 2 ** bw.fr)) +
sin((t / 16 * 2 ** bw.fr) + (1 + (bw.a*12)) * cos(t/16 * 2 ** bw.fr))) / 4 + // guitar wave 1

sin((t/8 * 2 ** bw.fr) + cos(t/16 * 2 ** bw.fr) * cos(t/8 * 2 ** bw.fr) * (1 + (bw.s * 10))) / 5 + sin((cos(t/16 * 2 ** bw.fr) + 10 * bw.s) * sin(t/4 * 2 ** bw.fr)) / 3) / (5 + (t&65535) / 96) * 10) * 2) / 2 - .5) * (524288 < t))) / 4 + // guitar wave 2
((n(1)-n(0))*(524288<t)) // snare

+

sin((t+sin(t/900)*16)/8*2**([[0,3,5,8,10,8,5,3],[3,5,8,10,15,10,8,5,3],[3,7,8,10,12,10,8,7,5],[5,8,10,12,17,12,10,8,5]][3&t>>17][7&t>>13]/12)) / 6 * ((262144*3)<t)) // vibrato sine
+
(sin(sqrt(t&16383)*2)+cos(sqrt(t&[16383,8191][1&t>>14])*1.6))*(524288<t)/5 // kick 
+
(524288 < t) // adds 1 at a specific point so it doesn't go under -1